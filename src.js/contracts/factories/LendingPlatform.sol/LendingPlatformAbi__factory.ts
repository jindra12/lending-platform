/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  LendingPlatformAbi,
  LendingPlatformAbiInterface,
} from "../../LendingPlatform.sol/LendingPlatformAbi";

const _abi = [
  {
    type: "function",
    name: "acceptLoan",
    inputs: [
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract Loan",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "getLoanFee",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLoanLimit",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLoanLimit",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "coin",
        type: "address",
        internalType: "contract IERC20Metadata",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLoanLimitRequest",
    inputs: [
      {
        name: "borrower",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLoanOffersLength",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "listLoanOffers",
    inputs: [
      {
        name: "from",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "count",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct LendingPlatFormStructs.LoanOffer[]",
        components: [
          {
            name: "coin",
            type: "address",
            internalType: "contract IERC20Metadata",
          },
          {
            name: "loanData",
            type: "tuple",
            internalType: "struct LendingPlatFormStructs.LoanData",
            components: [
              {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "toBePaid",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "interval",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "singlePayment",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "defaultLimit",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "collateral",
                type: "tuple",
                internalType: "struct LendingPlatFormStructs.Collateral",
                components: [
                  {
                    name: "value",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "isCollateralEth",
                    type: "bool",
                    internalType: "bool",
                  },
                  {
                    name: "collateralCoin",
                    type: "address",
                    internalType: "contract IERC20Metadata",
                  },
                ],
              },
            ],
          },
          {
            name: "from",
            type: "address",
            internalType: "address",
          },
          {
            name: "id",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "isEth",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "offerLoanCoinCoin",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "toBePaid",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "interval",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "defaultLimit",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "singlePayment",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "collateral",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "coin",
        type: "address",
        internalType: "contract IERC20Metadata",
      },
      {
        name: "collateralCoin",
        type: "address",
        internalType: "contract IERC20Metadata",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "offerLoanCoinEth",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "toBePaid",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "interval",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "defaultLimit",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "singlePayment",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "collateral",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "coin",
        type: "address",
        internalType: "contract IERC20Metadata",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "offerLoanEthCoin",
    inputs: [
      {
        name: "toBePaid",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "interval",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "defaultLimit",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "singlePayment",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "collateral",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "collateralCoin",
        type: "address",
        internalType: "contract IERC20Metadata",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "offerLoanEthEth",
    inputs: [
      {
        name: "toBePaid",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "interval",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "defaultLimit",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "singlePayment",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "collateral",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "removeLoan",
    inputs: [
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setLoanFee",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setLoanLimit",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setLoanLimit",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "coin",
        type: "address",
        internalType: "contract IERC20Metadata",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setLoanLimitRequest",
    inputs: [
      {
        name: "info",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "AcceptedLoan",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "loan",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "IncreaseCoinLoanLimit",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "borrower",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "coinSymbol",
        type: "string",
        indexed: true,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "IncreaseEthLoanLimit",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "borrower",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "IssuedLoan",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RequestLoanLimit",
    inputs: [
      {
        name: "borrower",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SetLoanFee",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
] as const;

export class LendingPlatformAbi__factory {
  static readonly abi = _abi;
  static createInterface(): LendingPlatformAbiInterface {
    return new Interface(_abi) as LendingPlatformAbiInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LendingPlatformAbi {
    return new Contract(address, _abi, runner) as unknown as LendingPlatformAbi;
  }
}
