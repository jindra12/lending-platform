diff --git a/lib.commonjs/utils/maths.js b/lib.commonjs/utils/maths.js
index 6ceb9fb98aa3367c307924ab67b35651fb040f20..213ff3da7abcc70840224a363261ed3e73c039dc 100644
--- a/lib.commonjs/utils/maths.js
+++ b/lib.commonjs/utils/maths.js
@@ -131,6 +131,8 @@ exports.toBigInt = toBigInt;
  */
 function getNumber(value, name) {
     switch (typeof (value)) {
+        case "object":
+            return BigInt(value.hex);
         case "bigint":
             (0, errors_js_1.assertArgument)(value >= -maxValue && value <= maxValue, "overflow", name || "value", value);
             return Number(value);
diff --git a/lib.esm/utils/maths.js b/lib.esm/utils/maths.js
index c669dd36d72f4b3bd34a9385a04c1d17a191d1fc..5c2f4dd31af94588152e8e47ae827b8fd77b69d6 100644
--- a/lib.esm/utils/maths.js
+++ b/lib.esm/utils/maths.js
@@ -68,6 +68,8 @@ export function mask(_value, _bits) {
  */
 export function getBigInt(value, name) {
     switch (typeof (value)) {
+        case "object":
+            return BigInt(value.hex);
         case "bigint": return value;
         case "number":
             assertArgument(Number.isInteger(value), "underflow", name || "value", value);
